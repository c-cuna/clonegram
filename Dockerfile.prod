# builder
FROM python:3.10.12-alpine as builder
WORKDIR /usr/src/app
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev libffi-dev openssl-dev
RUN apk --update add \
    build-base \
    jpeg-dev \
    zlib-dev
RUN pip install --upgrade pip
# RUN pip install flake8==3.9.2
# COPY . .
# RUN flake8 --ignore=E501,F401 .
COPY ./requirements.txt .
RUN cat requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# Runner
FROM python:3.10.12-alpine as runner
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
RUN mkdir -p /app
RUN addgroup -S app && adduser -S app -G app
ENV APP_HOME=/app
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME
RUN apk update && apk add libpq
RUN apk --update add \
    build-base \
    jpeg-dev \
    zlib-dev
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN cat requirements.txt
RUN pip install --no-cache /wheels/*
COPY ./scripts/entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh
COPY . .
EXPOSE 8000
EXPOSE 9000
RUN chown -R app:app $APP_HOME
USER app
ENTRYPOINT ["/app/entrypoint.prod.sh"]